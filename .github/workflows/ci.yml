---
# Build and test the ATMOSPEC Docker image on every push and pull request.
#
# Builds the images with docker buildx bake and pushes them to a local Docker
# image registry, and runs the automated tests with pytest.

name: build-and-test

on:
    push:
        branches:
            - main
        tags:
            - "*"
    pull_request:
        branches:
            - main

env:
  REGISTRY: ghcr.io
  ISPG_IMAGE: ${{ github.repository_owner }}/atmospec

jobs:

    build:

        runs-on: ubuntu-latest
        timeout-minutes: 20
        permissions:
          packages: write
          contents: read

        #outputs:
        #    images: ${{ steps.bake_metadata.outputs.images }}
        #    tags: ${{ steps.meta.outputs.tags }}

        steps:
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v4
              with:
                images: ${{ env.REGISTRY }}/${{ env.ISPG_IMAGE }}
                tags: |
                    type=edge
                    type=ref,event=pr
                    type=raw,value={{tag}},enable=${{ github.ref_type == 'tag' && ! startsWith(github.ref_name, 'v') }}
                    type=match,pattern=v(\d{4}\.\d{4}(-.+)?),group=1
            - name: Build image
              id: build
              uses: docker/build-push-action@v3
              with:
                  tags: ${{ steps.meta.outputs.tags }}
                  push: true

    test:
        needs: build
        runs-on: ubuntu-latest
        timeout-minutes: 10

        steps:
            - uses: actions/checkout@v2
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Setup Python test environment
              uses: mamba-org/provision-with-micromamba@v13
              with:
                  cache-env: true
            - name: Run tests
              shell: bash -l {0}  # required to activate the conda environment
              #env: ${{ fromJSON(needs.build.outputs.images) }}
              run: pytest -v
              env:
                TAG: pr-11


    release:
        if: >-
            github.repository == 'ispg-group/aiidalab-ispg-docker-stack'
            && (github.ref_type == 'tag' || github.ref_name == 'main')
        needs:
            - build
            - test

        runs-on: ubuntu-latest
        timeout-minutes: 10

        steps:
            - uses: softprops/action-gh-release@v0.1.14
              name: Create release
              if: startsWith(github.ref, 'refs/tags/v')
              with:
                  generate_release_notes: true
